<?xml version="1.0" encoding="utf-8"?>

<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark Panel container.  

@see spark.components.Panel

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009" blendMode="normal" mouseEnabled="false" 
			 minWidth="131" minHeight="27" alpha.disabled="0.5" alpha.disabledWithControlBar="0.5">
	
	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.Panel")]
		]]>
	</fx:Metadata> 
	
	<fx:Script fb:purpose="styling">
		<![CDATA[
			import mx.core.FlexVersion;
			
			/* exclusions before Flex 4.5 for backwards-compatibility purposes */
			static private const exclusions_4_0:Array = ["background", "titleDisplay", "contentGroup", "controlBarGroup"];
			
			/**
			 * @private
			 */
			override public function get colorizeExclusions():Array  {
				return exclusions_4_0;
			}
			
			/**
			 * @private
			 */
			override protected function initializationComplete():void
			{
				useChromeColor = true;
				super.initializationComplete();
			}
			
			/**
			 * @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				if (getStyle("borderVisible") == true)
				{
					border.visible = true;
					background.left = background.top = background.right = background.bottom = 1;
					contents.left = contents.top = contents.right = contents.bottom = 1;
				}
				else
				{
					border.visible = false;
					background.left = background.top = background.right = background.bottom = 0;
					contents.left = contents.top = contents.right = contents.bottom = 0;
				}
				
				var cr:Number = getStyle("cornerRadius");
				var withControls:Boolean = 
					(currentState == "disabledWithControlBar" || 
						currentState == "normalWithControlBar");
				
				if (cornerRadius != cr)
				{
					cornerRadius = cr;
					
					setPartCornerRadii(topMaskRect, withControls); 
					setPartCornerRadii(border, withControls); 
					setPartCornerRadii(background, withControls);                
				}
				
				if (bottomMaskRect) setPartCornerRadii(bottomMaskRect, withControls); 
				
				borderStroke.color = getStyle("borderColor");
				borderStroke.alpha = getStyle("borderAlpha");
				backgroundFill.color = getStyle("backgroundColor");
				backgroundFill.alpha = getStyle("backgroundAlpha");
				
				if (getStyle("controlBarColor"))
					if (controlBarFill) controlBarFill.color = getStyle("controlBarColor");
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
			
			/**
			 * @private
			 */  
			private function setPartCornerRadii(target:Rect, includeBottom:Boolean):void
			{            
				target.topLeftRadiusX = cornerRadius;
				target.topRightRadiusX = cornerRadius;
				target.bottomLeftRadiusX = includeBottom ? cornerRadius : 0;
				target.bottomRightRadiusX = includeBottom ? cornerRadius : 0;
			}
			
			private var cornerRadius:Number;
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="disabled" />
		<s:State name="normalWithControlBar" stateGroups="withControls" />
		<s:State name="disabledWithControlBar" stateGroups="withControls" />
	</s:states>
	
	<!-- top group mask -->
	<!--- @private -->
	<s:Group left="1" top="1" right="1" bottom="1" id="topGroupMask" >
		<!--- @private -->
		<s:Rect id="topMaskRect" left="0" top="0" right="0" bottom="0">
			<s:fill>
				<s:SolidColor alpha="0"/>
			</s:fill>
		</s:Rect>
	</s:Group>
	
	<!-- bottom group mask -->
	<!--- @private -->
	<s:Group left="1" top="1" right="1" bottom="1" id="bottomGroupMask" 
			 includeIn="normalWithControlBar, disabledWithControlBar">
		<!--- @private -->
		<s:Rect id="bottomMaskRect" left="0" top="0" right="0" bottom="0">
			<s:fill>
				<s:SolidColor alpha="0"/>
			</s:fill>
		</s:Rect>
	</s:Group>
	
	<!-- layer 1: border -->
	<!--- @private -->
	<s:Rect id="border" left="0" right="0" top="0" bottom="0" >
		<s:stroke>
			<!--- @private -->
			<s:SolidColorStroke id="borderStroke" weight="1" color="0x454545" />
		</s:stroke>
	</s:Rect>
	
	<!-- layer 2: background fill -->
	<!--- Defines the appearance of the PanelSkin class's background. -->
	<s:Rect id="background" left="1" top="1" right="1" bottom="1">
		<s:fill>
			<!--- @private
			Defines the  PanelSkin class's background fill. The default color is 0xFFFFFF. -->
			<s:SolidColor id="backgroundFill" color="#FFFFFF"/>
		</s:fill>
	</s:Rect>
	
	<!-- layer 3: contents -->
	<!--- Contains the vertical stack of titlebar content and controlbar. -->
	<s:Group left="1" right="1" top="1" bottom="1" id="contents">
		<s:layout>
			<s:VerticalLayout gap="2" horizontalAlign="justify" />
		</s:layout>
		
		<!--- @private -->
		<s:Group id="topGroup" mask="{topGroupMask}" height="30">
			
			<s:Rect id="tbFill" left="0" right="0" bottom="1" top="0">
				<s:fill>
					<s:SolidColor color="0xf7f7f7"/>
				</s:fill>
			</s:Rect>
			
			<s:Rect id="tbSeparator" left="0" right="0" height="2" y="28">
				<s:fill>
					<s:SolidColor color="0xd3d7db"/>
				</s:fill>
			</s:Rect>
			
			<!-- layer 3: text -->
			<!--- @copy spark.components.Panel#titleDisplay -->
			<s:Label id="titleDisplay" left="5" right="5" top="1" bottom="0" minHeight="30"
					 fontWeight="bold" maxDisplayedLines="1" textAlign="start"
					 verticalAlign="middle" fontSize="14">
			</s:Label>
		</s:Group>
		
		<!--
		Note: setting the minimum size to 0 here so that changes to the host component's
		size will not be thwarted by this skin part's minimum size.   This is a compromise,
		more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
		-->
		<!--- @copy spark.components.SkinnableContainer#contentGroup -->
		<s:Scroller width="100%" height="100%" minWidth="0" minHeight="0">
			<s:Group id="contentGroup">
			</s:Group>			
		</s:Scroller>
		
		<!--- @private -->
		<s:Group id="bottomGroup" minWidth="0" minHeight="0"
				 includeIn="normalWithControlBar, disabledWithControlBar" >
			
			<s:Group left="0" right="0" top="0" bottom="0" mask="{bottomGroupMask}">
				
				<!-- layer 2: control bar fill -->
				<s:Rect left="1" right="1" top="2" bottom="1">
					<s:fill>
						<s:SolidColor color="0xf7f7f7" id="controlBarFill"/>
					</s:fill>
				</s:Rect>
			</s:Group>
			<!-- layer 3: control bar -->
			<!--- @copy spark.components.Panel#controlBarGroup -->
			<s:Group id="controlBarGroup" left="0" right="0" top="1" bottom="1" minWidth="0" minHeight="0">
				<s:layout>
					<s:HorizontalLayout paddingLeft="10" paddingRight="10" paddingTop="7" paddingBottom="7" gap="10" />
				</s:layout>
			</s:Group>
		</s:Group>
	</s:Group>
</s:SparkSkin>
